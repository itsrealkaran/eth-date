#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

console.log("üåç Setting up Real World ID Integration...\n");

// Check if .env.local already exists
const envPath = ".env.local";
if (fs.existsSync(envPath)) {
  console.log("‚ö†Ô∏è  .env.local already exists");
  rl.question("Do you want to overwrite it? (y/N): ", (answer) => {
    if (answer.toLowerCase() === "y" || answer.toLowerCase() === "yes") {
      createEnvFile();
    } else {
      console.log("‚ùå Setup cancelled");
      rl.close();
    }
  });
} else {
  createEnvFile();
}

function createEnvFile() {
  console.log("\nüìã Please provide your World ID configuration:\n");

  rl.question(
    "Enter your World ID App ID (format: app_staging_xxxxxxxxxxxx): ",
    (appId) => {
      if (!appId || !appId.startsWith("app_")) {
        console.log('‚ùå Invalid App ID format. Must start with "app_"');
        rl.close();
        return;
      }

      const envContent = `# World ID Configuration
# Generated by setup script

# Your World ID App ID
APP_ID=${appId}

# Note: Make sure you've created an incognito action with ID: rizzlerverification
# in the World ID Developer Portal at https://developer.worldcoin.org/
`;

      try {
        fs.writeFileSync(envPath, envContent);
        console.log("\n‚úÖ .env.local file created successfully!");
        console.log("\nüìã Next steps:");
        console.log("1. Go to https://developer.worldcoin.org/");
        console.log(
          "2. Create an incognito action with ID: rizzlerverification"
        );
        console.log("3. Run: pnpm run dev");
        console.log("4. Test the verification flow");
        console.log("\nüéâ Real World ID integration is ready!");
      } catch (error) {
        console.log("‚ùå Error creating .env.local:", error.message);
      }

      rl.close();
    }
  );
}
